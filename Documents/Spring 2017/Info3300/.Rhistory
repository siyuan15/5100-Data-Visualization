seq(from = -10, to = 20, by = 0.01)
help("plot")
plot(3, 5)
help("plot.function")
plot((-10 : 20), 0.1x^3 - 2x^2 + 0.1x)
plot((-10 : 20), y)
y = 0.1x^3 - 2x^2 + 0.1x
help("rep")
x = seq(from = -10, to = 20, by = 0.01)
y = (0 : length(x))
for (i in (1: length(x))){
y[i] = 0.1 * x[i]^3 - 2 * x[i]^2 + 0.1 * x[i]
}
x = seq(from = -10, to = 20, by = 0.01)
y = (0 : length(x))
for (i in (1: length(x))){
y[i] = 0.1 * x[i]^3 - 2 * x[i]^2 + 0.1 * x[i]
}
plot(x, y, type = "l")
x = seq(from = -10, to = 20, by = 0.01)
y = (1 : length(x))
for (i in (1: length(x))){
y[i] = 0.1 * x[i]^3 - 2 * x[i]^2 + 0.1 * x[i]
}
plot(x, y, type = "l")
}
plot(x, y, type = "l", main = "x_y",xlab = "x_axis", ylab = "y_axis")
plot(x, y, type = "l", main = "x_y",xlab = "x_axis", ylab = "y_axis")
> par(mfrow = c(2, 1))
par(mfrow = c(2, 1))
lines(x, y-100, type = "l")
lines(x, y-100, type = "l")
x = seq(from = -10, to = 20, by = 0.01)
y = rep(0, length(x))
for (i in (1: length(x))){
y[i] = 0.1 * x[i]^3 - 2 * x[i]^2 + 0.1 * x[i]
}
plot(x, y, type = "l", main = "x_y",xlab = "x_axis", ylab = "y_axis")
lines(x, y-100, type = "l")
par(mfrow = c(2, 1))
x = seq(from = -10, to = 20, by = 0.01)
y = rep(0, length(x))
for (i in (1: length(x))){
y[i] = 0.1 * x[i]^3 - 2 * x[i]^2 + 0.1 * x[i]
}
plot(x, y, type = "l", main = "x_y",xlab = "x_axis", ylab = "y_axis")
lines(x, y-100, type = "l")
x = seq(from = -10, to = 20, by = 0.01)
y = rep(0, length(x))
for (i in (1: length(x))){
y[i] = 0.1 * x[i]^3 - 2 * x[i]^2 + 0.1 * x[i]
}
plot(x, y, type = "l", main = "x_y",xlab = "x_axis", ylab = "y_axis")
x = seq(from = -10, to = 20, by = 0.01)
y = rep(0, length(x))
for (i in (1: length(x))){
y[i] = 0.1 * x[i]^3 - 2 * x[i]^2 + 0.1 * x[i]
}
plot(x, y, type = "l", main = "x_y",xlab = "x_axis", ylab = "y_axis")
lines(x, y-100, type = "l")
x = seq(from = -10, to = 20, by = 0.01)
y = rep(0, length(x))
for (i in (1: length(x))){
y[i] = 0.1 * x[i]^3 - 2 * x[i]^2 + 0.1 * x[i]
}
plot(x, y, type = "l", main = "x_y",xlab = "x_axis", ylab = "y_axis")
lines(x, y-100, type = "l")
par(mfrow = c(2, 1))
par("mar")
par(mar = c(1, 1, 1, 1))
x = seq(from = -10, to = 20, by = 0.01)
y = (1, length(x))
for (i in (1: length(x))){
y[i] = 0.1 * x[i]^3 - 2 * x[i]^2 + 0.1 * x[i]
}
x = seq(from = -10, to = 20, by = 0.01)
y = (1 : length(x))
for (i in (1: length(x))){
y[i] = 0.1 * x[i]^3 - 2 * x[i]^2 + 0.1 * x[i]
}
plot(x, y, type = "l", main = "x_y",xlab = "x_axis", ylab = "y_axis")
lines(x, y-100, type = "l")
par(mfrow = c(2, 1))
par("mar")
par(mar = c(1, 1, 1, 1))
x = seq(from = -10, to = 20, by = 0.01)
y = (1 : length(x))
for (i in (1: length(x))){
y[i] = 0.1 * x[i]^3 - 2 * x[i]^2 + 0.1 * x[i]
}
plot(x, y, type = "l", main = "x_y",xlab = "x_axis", ylab = "y_axis")
lines(x, y-100, type = "l")
par(mfrow = c(2, 1))
par("mar")
par(mar = c(1, 1, 1, 1))
x = seq(from = -10, to = 20, by = 0.01)
y = (1 : length(x))
for (i in (1: length(x))){
y[i] = 0.1 * x[i]^3 - 2 * x[i]^2 + 0.1 * x[i]
}
plot(x, y, type = "l", main = "x_y",xlab = "x_axis", ylab = "y_axis")
lines(x, y-100, type = "l")
par(mfrow = c(2, 1))
par("mar")
par(mar = c(1, 1, 1, 1))
x = seq(from = -10, to = 20, by = 0.01)
y = rep(1, length(x))
for (i in (1: length(x))){
y[i] = 0.1 * x[i]^3 - 2 * x[i]^2 + 0.1 * x[i]
}
plot(x, y, type = "l", main = "x_y",xlab = "x_axis", ylab = "y_axis")
lines(x, y-100, type = "l")
par(mfrow = c(2, 1))
par("mar")
par(mar = c(1, 1, 1, 1))
x = seq(from = -10, to = 20, by = 0.01)
y = rep(1, length(x))
for (i in (1: length(x))){
y[i] = 0.1 * x[i]^3 - 2 * x[i]^2 + 0.1 * x[i]
}
plot(x, y, type = "l", main = "x_y", xlab = "x_axis", ylab = "y_axis")
lines(x, y-100, type = "l")
x = seq(from = -10, to = 20, by = 0.01)
y = rep(1, length(x))
for (i in (1: length(x))){
y[i] = 0.1 * x[i]^3 - 2 * x[i]^2 + 0.1 * x[i]
}
plot(x, y, type = "l", main = "x_y", xlab = "x_axis", ylab = "y_axis")
plot(x, y, type = "l",xlab = "x_axis", ylab = "y_axis", main = "x_y")
x = seq(from = -10, to = 20, by = 0.01)
y = rep(1, length(x))
for (i in (1: length(x))){
y[i] = 0.1 * x[i]^3 - 2 * x[i]^2 + 0.1 * x[i]
}
plot(x, y, type = "l",xlab = "x_axis", ylab = "y_axis", main = "x_y")
lines(x, y-100, type = "l")
setwd = ("/Users/siyuan/Downloads")
corollas = read.table(file = "ToyotaCorolla.csv", header = T, sep = ",")
corollas = read.table(file = "/Users/siyuan/Downloads/ToyotaCorolla.csv", header = T, sep = ",")
View(corollas)
nrow(corollas)
corollas[!complete.cases(corollas)),]
corollas[!complete.cases(corollas),]
getwd(corollas)
getwd("corollas.csv")
View(corollas)
sum(is.na(corollas$Price))
corollas2 <- corollas[, c("Price","Age_08_04", "KM", "Fuel_Type", "HP",
"Met_Color", "Doors", "Quarterly_Tax", "Weight") ]
is.factor(corollas2$Fuel_Type)
is.factor(corollas2$Met_Color)
corollas2$Met_Color = as.factor(corollas2$Met_Color)
is.factor(corollas2$Met_Color)
levels(corollas2$Fuel_Type)
corollasLM = lm( formula = Price ~ ., data = corollas2 )
summary(corollasLM)
samples = (4, 11, 6, 7, 3, 7, 2, 4, 15, 6, 7, 5, 4, 15, 7, 5, 7)
samples = c(4, 11, 6, 7, 3, 7, 2, 4, 15, 6, 7, 5, 4, 15, 7, 5, 7)
mean(samples)
hist.default(samples)
frequency(samples)
hist(samples, right = FALSE)
samples <- [4, 11, 6, 7, 3, 7, 2, 4, 15, 6, 7, 5, 4, 15, 7, 5, 7]
samples = (4, 11, 6, 7, 3, 7, 2, 4, 15, 6, 7, 5, 4, 15, 7,
5, 7)
samples = (4, 11, 6, 7, 3, 7, 2, 4, 15, 6, 7, 5, 4, 15, 7, 5, 7)
samples = c(4, 11, 6, 7, 3, 7, 2, 4, 15, 6, 7, 5, 4, 15, 7, 5, 7)
hist(samples, right = FALSE, break = 15)
hist(samples, right = FALSE, break = "15")
hist(samples, right = FALSE, breaks = 15)
x = seq(from = -10, to = 20, by = 0.01)
y = rep(1, length(x))
for (i in (1: length(x))){
y[i] = 0.1 * x[i]^3 - 2 * x[i]^2 + 0.1 * x[i]
}
plot(x, y, type = "l",xlab = "x_axis", ylab = "y_axis", main = "x_y")
lines(x, y-100, type = "l")
par(mfrow = c(2, 1))
par("mar")
par(mar = c(1, 1, 1, 1))
corollas = read.table(file = "/Users/siyuan/Downloads/ToyotaCorolla.csv", header = T, sep = ",")
nrow(corollas)
sum(is.na(corollas$Price))
corollas2 <- corollas[, c("Price","Age_08_04", "KM", "Fuel_Type", "HP",
"Met_Color", "Doors", "Quarterly_Tax", "Weight") ]
is.factor(corollas2$Fuel_Type)
levels(corollas2$Fuel_Type)
is.factor(corollas2$Met_Color)
corollas2$Met_Color = as.factor(corollas2$Met_Color)
corollasLM = lm( formula = Price ~ ., data = corollas2 )
summary(corollasLM)
mean(corollas$Price)
ncol(corollas)
titanic = read.table(file = "/Users/siyuan/Documents/Spring 2017/Orie 4740 - Data Mining/titanic.csv", header = T, sep = ",")
View(titanic)
titanic = read.table(file = "/Users/siyuan/Documents/Spring 2017/Orie 4740 - Data Mining/titanic.csv", header = T, sep = ",", na.strings = ``)
titanic = read.table(file = "/Users/siyuan/Documents/Spring 2017/Orie 4740 - Data Mining/titanic.csv", header = T, sep = ",", na.strings = ``)
titanic = read.table(file = "/Users/siyuan/Documents/Spring 2017/Orie 4740 - Data Mining/titanic.csv", header = T, na.strings = ``)
titanic = read.table(file = "/Users/siyuan/Documents/Spring 2017/Orie 4740 - Data Mining/titanic.csv", header = T, na.strings = '')
titanic = read.csv(file = "/Users/siyuan/Documents/Spring 2017/Orie 4740 - Data Mining/titanic.csv", header = T, na.strings = '')
titanic <- titanic[, !columnaes(titanic) %in% c('PassengerId', 'Name', 'Ticket', 'Cabin')]
titanic <- titanic[, !colnames(titanic) %in% c('PassengerId', 'Name', 'Ticket', 'Cabin')]
View(titanic)
titanic <- titanic[complete.cases(titanic),]
set.seed(1)
train_ind <- sample(1:nrow(titanic), 2/3 * nrow(titanic))
View(titanic)
help(sapply)
titanic_train <- titanic[train_ind, ]
sapply(titanic, class)
titanic_test <- titanic[-train_ind, ]
sapply(titanic, class)
titanic_logit <- glm(Survived~., data = titanic_train, family = binomial)
titanic_pred <- predict(titanic_logit, titanic_test, type = "response")
summary(titanic_logit)
titanic_bin <- as.numeric(titanic_pred >= 0.5)
table(titanic_bin, titanic_test$Survived)
help("predict")
View(titanic)
summary(titanic_logit)
titanic_bin <- as.numeric(titanic_pred >= 0.5)
table(titanic_bin, titanic_test$Survived)
install.packages("rjson")
library(rjson)
help("fromJSON")
test = fromJSON(file = "test.json")
setwd("/Users/siyuan/Documents/Spring 2017/Info3300")
library(rjson)
test = fromJSON(file = "test.json")
test_dataFrame = as.data.frame(test)
install.packages("jsonlite")
library(jsonlite)
test = fromJSON("test.json", flatten = TRUE)
test_dataFrame = as.data.frame(test)
library(rjson)
library(jsonlite)
test = fromJSON("test.json", flatten = TRUE)
test_data <- lapply(test, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
test_dataFrame = as.data.frame(test)
test_dataFrame = data.frame(test)
test_dataFrame = data.frame(unlist(test))
View(test_dataFrame)
write.csv(test_dataFrame, file = "testData.csv")
test = fromJSON("test.json", flatten = TRUE)
test_data <- lapply(test, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
test_data = data.frame(unlist(test))
View(test_data)
write.csv(test_data, file = "testData.csv")
testD = read.csv(file = "testData.csv", header = T)
View(testD)
library(rjson)
library(jsonlite)
test = fromJSON("top20.json", flatten = TRUE)
test_data <- lapply(test, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
test_data = data.frame(unlist(test))
View(test_data)
write.csv(test_data, file = "testData.csv")
testD = read.csv(file = "testData.csv", header = T)
testD$company_name = mapply(grepl, pattern = "uber", x = testD$X, ignore.case = TRUE)
testD$Uber = filter(testD, company_name = TRUE)
testD$Uber = filter(testD, company_name == TRUE)
Uber = filter(testD, company_name == TRUE)
library(dplyr)
library(reshape)
library(ggplot2)
library(reshape2)
testD$company_name = mapply(grepl, pattern = "uber", x = testD$X, ignore.case = TRUE)
Uber = filter(testD, company_name == TRUE)
Uber = filter(testD, testD$company_name == TRUE)
cbind(testD, Uber)
Uber = cbind(testD, Uber)
View(Uber)
Uber = filter(testD, testD$company_name == TRUE)
Uber = rbind(testD, Uber)
Uber = as.data.frame(filter(testD, testD$company_name == TRUE))
View(Uber)
help(filter)
library(dplyr)
library(reshape)
library(ggplot2)
library(reshape2)
testD$company_name = mapply(grepl, pattern = "uber", x = testD$X, ignore.case = TRUE)
Uber = as.data.frame(filter(testD, testD$company_name == TRUE))
install.packages(dplyr)
install.packages(ggplot2)
install.packages(reshape2)
install.packages("dplyr")
install.packages("ggplot2")
install.packages("reshape2")
library(dplyr)
library(ggplot2)
library(reshape2)
testD$company_name = mapply(grepl, pattern = "uber", x = testD$X, ignore.case = TRUE)
Uber = as.data.frame(filter(testD, testD$company_name == TRUE))
View(Uber)
testD$company_name = mapply(grepl, pattern = "spotify", x = testD$X, ignore.case = TRUE)
Spotify = as.data.frame(filter(testD, testD$company_name == TRUE))
View(Spotify)
testD$company_name = mapply(grepl, pattern = "infor", x = testD$X, ignore.case = TRUE)
infor = as.data.frame(filter(testD, testD$company_name == TRUE))
View(infor)
testD$company_name = mapply(grepl, pattern = "beijing", x = testD$X, ignore.case = TRUE)
beijing_homelink = as.data.frame(filter(testD, testD$company_name == TRUE))
View(beijing_homelink)
testD$company_name = mapply(grepl, pattern = "pinterest", x = testD$X, ignore.case = TRUE)
pinterest = as.data.frame(filter(testD, testD$company_name == TRUE))
View(pinterest)
testD$company_name = mapply(grepl, pattern = "wework", x = testD$X, ignore.case = TRUE)
wework = as.data.frame(filter(testD, testD$company_name == TRUE))
testD$company_name = mapply(grepl, pattern = "xiaomi", x = testD$X, ignore.case = TRUE)
xiaomi = as.data.frame(filter(testD, testD$company_name == TRUE))
testD$company_name = mapply(grepl, pattern = "china", x = testD$X, ignore.case = TRUE)
china_internet = as.data.frame(filter(testD, testD$company_name == TRUE))
testD$company_name = mapply(grepl, pattern = "airbnb", x = testD$X, ignore.case = TRUE)
airbnb = as.data.frame(filter(testD, testD$company_name == TRUE))
testD$company_name = mapply(grepl, pattern = "kuaidi", x = testD$X, ignore.case = TRUE)
didi_kuaidi = as.data.frame(filter(testD, testD$company_name == TRUE))
testD$company_name = mapply(grepl, pattern = "stripe", x = testD$X, ignore.case = TRUE)
stripe = as.data.frame(filter(testD, testD$company_name == TRUE))
testD$company_name = mapply(grepl, pattern = "insurance", x = testD$X, ignore.case = TRUE)
zhong_an = as.data.frame(filter(testD, testD$company_name == TRUE))
testD$company_name = mapply(grepl, pattern = "space", x = testD$X, ignore.case = TRUE)
space = as.data.frame(filter(testD, testD$company_name == TRUE))
testD$company_name = mapply(grepl, pattern = "palantir", x = testD$X, ignore.case = TRUE)
palantir = as.data.frame(filter(testD, testD$company_name == TRUE))
testD$company_name = mapply(grepl, pattern = "shanghai", x = testD$X, ignore.case = TRUE)
shanghai = as.data.frame(filter(testD, testD$company_name == TRUE))
testD$company_name = mapply(grepl, pattern = "flipkart", x = testD$X, ignore.case = TRUE)
flipkart = as.data.frame(filter(testD, testD$company_name == TRUE))
View(zhong_an)
rm(zhong-an, Spotify, pinterest, stripe, infor, beijing_homelink)
rm("zhong-an")
rm(zhong_an)
rm(Spotify, pinterest, stripe, infor, beijing_homelink)
View(xiaomi)
View(xiaomi)
View(wework)
xiaomi$company_name = NULL
View(xiaomi)
wework$company_name = NULL
Uber$company_name = NULL
shanghai$company_name = NULL
flipkart$company_name = NULL
palantir$company_name = NULL
space$company_name = NULL
didi_kuaidi$company_name = NULL
airbnb$company_name = NULL
china_internet$company_name = NULL
View(airbnb)
View(airbnb)
c(airbnb, china_internet)
lalala = c(airbnb, china_internet)
data.frame(lalala = c(airbnb, china_internet))
lalala = data.frame(lalala = c(airbnb, china_internet))
View(lalala)
lalala = c(didi_kuaidi, flipkart, palantir, shanghai, space, Uber, wework, xiaomi)
testData = data.frame(c(didi_kuaidi, flipkart, palantir, shanghai, space, Uber, wework, xiaomi, airbnb, china_internet))
testData = c(didi_kuaidi, flipkart, palantir, shanghai, space, Uber, wework, xiaomi, airbnb, china_internet)
data.frame(testData)
as.data.frame(testData)
help(metl)
help("melt")
View(Uber)
uber = melt(Uber, id = "X")
View(uber)
View(Uber)
View(xiaomi)
uber = melt(Uber)
uber = melt(Uber, id = "unlist.test.")
View(uber)
